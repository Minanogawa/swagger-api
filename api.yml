swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:4200"
basePath: "/"
tags:
  - name: "auth"
    description: "Oauth2により認証を行う"
  - name: "adTop"
    description: "Administration Topページにおけるデータ通信定義"
  - name: "cpCalendar"
    description: "Content Calendarページにおけるデータ通信定義"
  - name: "cpTop"
    description: "Content Topページにおけるデータ通信定義"
  - name: "eventResearch"
    description: "Eventを生成する為の情報、eventResearchからEvent情報を集めEventのStackを行う"
  - name: "event"
    description: "Event関係のまとめ"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
  - name: "global"
    description: "Webサイトの特定のページに該当しない処理連携"
  
schemes:
  - "https"
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"

paths:
  /auth/facebook:
    get:
      tags:
      - "auth"
      summary: "Facebook認証"
      description: "Facebookにより認証情報を取得する"
      operationId: "getUserProfileWithFacebook"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
          
  /auth/github:
    get:
      tags:
      - "auth"
      summary: "github認証"
      description: "githubにより認証情報を取得する"
      operationId: "getUserProfileWithGithub"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"

  /adTop/article:
    get:
      tags:
      - "adTop"
      summary: "Administration Topページにおいて、最新のArticle情報を取得する"
      operationId: "getLatestArticle"
      produces:
      - "application/json"
      responses:
        200:
          description: "成功時レスポンス"
          schema:
            type: "string"
            description: "ファイルパス"
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adTop"
      summary: "Administration Topページにおいて、記事を登録する"
      operationId: "createNewArticle"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Article"
      responses:
        200:
          description: "成功時レスポンス"
          schema:
            type: "string"
            description: "ファイルの登録に成功しました(メッセージ返却)"
        400:
          description: "Invalid status value"
          
  
  /cpCalendar/calendar:
    get:
      tags:
      - "cpCalendar"
      summary: "Calendarに出力するEvent情報を取得する"
      operationId: "getEventCalendar"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        400:
          description: "Invalid status value"

  /cpCalendar/basicLine:
    get:
      tags:
      - "cpTop"
      summary: "Topページに出力するBasic Lineチャート用のデータを取得する"
      operationId: "getBasicLineData"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BasicLine"
        400:
          description: "Invalid status value"

  /eventResearch:
    post:
      tags:
      - "eventResearch"
      summary: "Event Research情報の新規追加"
      description: "Event Research情報はEventを生成する為の大本の情報で、その情報をdatatableから追加する"
      operationId: "addEventResearch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "EventResearch object を新規追加する為に設定する"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/EventResearch"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
      - "eventResearch"
      summary: "Event Research情報の更新"
      description: "researchNumberを指定して、該当する情報を更新する"
      operationId: "updateEventSearch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "ID of pet that needs to be fetched"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/EventResearch"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EventResearch"
        400:
          description: "Invalid status value"
    get:
      tags:
      - "eventResearch"
      summary: "Event Research情報の取得"
      description: "Event Research情報を全件取得する"
      operationId: "getEventResearch"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EventResearch"
        400:
          description: "Invalid status value"
          
  /eventResearch/{researchNumber}:
    delete:
      tags:
      - "eventResearch"
      summary: "Event Research情報の削除"
      description: "researchNumberを指定して、該当する情報を削除する"
      operationId: "deleteEventSearch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "researchNumber"
        description: "ID of pet that needs to be fetched"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EventResearch"
        400:
          description: "Invalid status value"

  /event:
    post:
      tags:
      - "event"
      summary: "Event 情報の新規追加"
      description: "Event 情報はEventを生成する為の大本の情報で、その情報をdatatableから追加する"
      operationId: "addEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Event object を新規追加する為に設定する"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Event"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
      - "event"
      summary: "Event 情報の更新"
      description: "researchNumberを指定して、該当する情報を更新する"
      operationId: "updateEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "ID of pet that needs to be fetched"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Event"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        400:
          description: "Invalid status value"
    get:
      tags:
      - "event"
      summary: "Event 情報の取得"
      description: "Event 情報を全件取得する"
      operationId: "getEvent"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        400:
          description: "Invalid status value"
    delete:
      tags:
      - "event"
      summary: "Event 情報の削除"
      description: "researchNumberを指定して、該当する情報を削除する"
      operationId: "deleteEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "ID of pet that needs to be fetched"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Event"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        400:
          description: "Invalid status value"


  /global:
    get:
      tags:
      - "global"
      summary: "Loading時にUser情報を取得する"
      operationId: "loadUserInfo"
      parameters:
        - $ref: '#/parameters/bearerAuth'
      responses:
        200:
          description: "正常応答"
          schema:
            type: "string"
            description: "ファイルパス"
        400:
          description: "Invalid status value"
    post:
      tags: 
        - "global"
      summary: "Session Storageにため込んでいる情報をELKに登録する"
      operationId: "sStorageDataToServer"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/sessionStorage"
      responses:
        200:
          description: "成功時レスポンス"
        400:
          description: "Invalid status value"

parameters:
  bearerAuth:
    name: Authorization
    description: bearer <JWT token>
    in: header
    type: string
    required: true    

definitions:
  Article:
    type: "object"
    properties:
      article:
        type: "string"
      language:
        type: "string"
      title:
        type: "string"
      yearMonth:
        type: "string"
  BasicLine:
    type: "object"
    properties:
      name:
        type: "integer"
        format: "int32"
      type:
        type: "array"
        items:
          type: "integer"
  Event:
    type: "object"
    properties:
      researchNumber:
        type: "string"
        format: "sequential"
      eventNumber:
        type: "string"
        format: "sequential"
      domainIcon:
        type: "string"
        description: "ドメインのFabicon"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      eventUrl:
        type: "string"
        format: "URL"
      eventCategory:
        type: "string"
        description: "Eventのカテゴリー"
        enum:
        - "Digital Art"
        - "Ramen"
      eventTitle:
        type: "string"
        description: "Eventの名前"
      eventYear:
        type: "string"
        format: "yyyy"
      eventStartDate:
        type: "string"
        format: "yyyyMMdd"
      eventEndDate:
        type: "string"
        format: "yyyyMMdd"
      district:
        type: "string"
        description: "Eventの開催場所"
        enum:
        - "Shinjuku"
      longitude:
        type: "integer"
        format: "Double"
        description: "Event開催場所の経度"
      latitude:
        type: "integer"
        format: "Double"
        description: "Event開催場所の緯度"
      color:
        type: "string"
        description: "表示の色"
        enum:
        - "blue"
        - "black"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      deleteFlg:
        type: "integer"
        format: "int32"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  EventResearch:
    type: "object"
    properties:
      researchNumber:
        type: "string"
        format: "sequential"
      eventNumber:
        type: "string"
        format: "sequential"
      researchWord:
        type: "string"
        description: "Google検索文言"
      research_domain:
        type: "string"
        format: "URL"
      domainIcon:
        type: "string"
        description: "ドメインのFabicon"
      siteCategory:
        type: "string"
        description: "リサーチ用サイトのカテゴリ"
        enum:
        - "Amusement"
        - "Culture"
        - "Food"
        - "Organization"
        - "Publisher"
        - "Retail"
        - "Twitter"
      eventCategoris:
        type: "object"
        properties:
          label:
            type: "string"
          value:
            type: "string"
          title:
            type: "string"
        description: "クライアント表示用フィールド、サーバーでは使わない 、埋め込むときに修正が必要"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      deleteFlg:
        type: "integer"
        format: "int32"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  sessionStorage:
    type: "object"
    properties:
      id:
        type: "string"
      dateTime:
        type: "string"
      temporary:
        type: "boolean"
      tokenID:
        type: "string"
      food:
        type: "object"
        properties:
          ramen:
            type: "number"
      org:
        type: "object"
        properties:
          degitalArt:
            type: "number"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"