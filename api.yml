swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger TokyoTravel"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:4200"
basePath: "/"
tags:
  - name: "auth"
    description: "Oauth2により認証を行う"
  - name: "adBook"
    description: "Administration Bookページにおけるデータ通信定義"
  - name: "adChart"
    description: "Administration Chartページにおけるデータ通信定義"
  - name: "adEvent"
    description: "Administration Eventページにおけるデータ通信定義"
  - name: "adMaster"
    description: "Administration Masterページにおけるデータ通信定義"
  - name: "adMovie"
    description: "Administration Movieページにおけるデータ通信定義"
  - name: "adPerson"
    description: "Administration Personページにおけるデータ通信定義"
  - name: "adSpot"
    description: "Administration Spotページ、主にSPOT情報の情報を管理する画面"
  - name: "adTop"
    description: "Administration Topページにおけるデータ通信定義"
  - name: "cpEvent"
    description: "Content Eventページにおけるデータ通信定義"
  - name: "cpSpot"
    description: "Content Spotページ、Spot情報をユーザーに表示される"
  - name: "cpTop"
    description: "Content Topページにおけるデータ通信定義"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
  - name: "global"
    description: "Webサイトの特定のページに該当しない処理連携"
  
schemes:
  - "https"
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"

paths:
  /auth/facebook:
    get:
      tags:
      - "auth"
      summary: "Facebook認証"
      description: "Facebookにより認証情報を取得する"
      operationId: "getUserProfileWithFacebook"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /auth/github:
    get:
      tags:
      - "auth"
      summary: "github認証"
      description: "githubにより認証情報を取得する"
      operationId: "getUserProfileWithGithub"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"

  /adChart:
    get:
      tags:
      - "adChart"
      summary: "Chartのテンプレート情報を取得"
      operationId: "readChartTemplate"
      responses:
        200:
          $ref: '#/responses/chart'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adChart"
      summary: "chartのテンプレート情報を新規追加"
      operationId: "createChartTemplate"
      parameters:
        - $ref: '#/parameters/chart'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid input"


  /adTop/treeMenu:
    get:
      tags:
      - "adTop"
      summary: "Administration Topページ、もしくはTopページにおいてTreeMenuを取得する"
      operationId: "readTreeMenu"
      responses:
        200:
           description: "successful operation return json menu data"
        400:
          description: "Invalid status value"
          
  /adTop/latestMenu:
    get:
      tags:
      - "adTop"
      summary: "Administration Topページ、もしくはTopページにおいて最新記事情報を取得する"
      operationId: "readLatest"
      responses:
        200:
           $ref: '#/responses/publishArray'
        400:
          description: "Invalid status value"

  /adTop/publish:
    get:
      tags:
      - "adTop"
      summary: "Administration TopページにおいてPublish情報を取得する"
      operationId: "readPublishInfo"
      responses:
        200:
          $ref: '#/responses/publishArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adTop"
      summary: "Administration Topページにおいて、記事を登録・更新をする"
      operationId: "createPublishInfo"
      parameters:
        - $ref: '#/parameters/publishArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
    put:
      tags:
      - "adTop"
      summary: "Administration Topページにおいて、記事情報の修正を行う"
      operationId: "updatePublish"
      parameters:
        - $ref: '#/parameters/publishArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"

  /cpTop/chart/{chartDate}:
    get:
      tags:
      - "cpTop"
      summary: "Topページに出力するBasic Lineチャート用のデータを取得する"
      operationId: "readMonthlyChart"
      parameters:
        - $ref: '#/parameters/chartDate'
      responses:
        200:
          description: "Chartデータ用のJSON文字列を返却"
        400:
          description: "Invalid status value"
  /cpTop/publish:
    get:
      tags:
      - "cpTop"
      summary: "Topページに出力する記事情報を画面のパラメーターから取得する"
      operationId: "readPublish"
      parameters:
        - $ref: '#/parameters/publish'
      responses:
        200:
          $ref: "#/responses/publish"
        400:
          description: "Invalid status value"
  /cpTop/publish/categoryMenu:
    get:
      tags:
      - "cpTop"
      summary: "Topページの右側に出力するカテゴリー分類メニューを取得する"
      operationId: "readPublishCategory"
      responses:
        200:
          $ref: "#/responses/categoryMenuArray"
        400:
          description: "Invalid status value"
  /cpTop/publish/latestMenu:
    get:
      tags:
      - "cpTop"
      summary: "Topページの右側に出力する最新記事メニューを5件取得する"
      operationId: "readPublishLatest"
      responses:
        200:
          $ref: '#/responses/publishArray'
        400:
          description: "Invalid status value"

  /global/user:
    get:
      tags: 
      - "global"
      summary: "User情報を取得する"
      operationId: "getUserInfo"
      parameters:
        - $ref: '#/parameters/bearerAuth'
      responses:
        200:
          description: "正常応答"
          schema:
            $ref: '#/definitions/timeline'
        400:
          description: "Invalid status value"
          
  /global/user/timeline:
    get:
      tags: 
      - "global"
      summary: "UserのTimelineデータを取得する"
      operationId: "geTimeLine"
      parameters:
        - $ref: '#/parameters/bearerAuth'
      responses:
        200:
          description: "正常応答"
          schema:
            type: array
            items:
              $ref: '#/definitions/timeline'
        400:
          description: "Invalid status value"
    put:
      tags:
      - "global"
      summary: "ダイアログで出力されたイベント情報のStarがON/OFFになった際に、その状態を保存する"
      operationId: "putTimeline"
      parameters:
        - $ref: '#/parameters/bearerAuth'
        - $ref: '#/parameters/timeLine'
      responses:
        200:
          description: "正常応答"
          schema:
            type: "string"
            description: "ファイルパス"
        400:
          description: "Invalid status value"
          
  /global/storage:
    post:
      tags: 
        - "global"
      summary: "Session Storageにため込んでいる情報をELKに登録する"
      operationId: "sStorageDataToServer"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/sessionStorage"
      responses:
        200:
          description: "成功時レスポンス"
        400:
          description: "Invalid status value"

  /mstClientJson:
    get:
      tags:
      - "adMaster"
      summary: "MST_CONFIG_JSONテーブルからデータを全件取得する"
      operationId: "readMstConfigJson"
      responses:
        200:
          $ref: '#/responses/mstConfigJsonArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adMaster"
      summary: "MST_CONFIG_JSONテーブルに新規データを登録する"
      operationId: "createMstConfigJson"
      parameters:
        - $ref: '#/parameters/mstConfigJsonForPostPut'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
    put:
      tags:
      - "adMaster"
      summary: "MST_CONFIG_JSONテーブルの更新を行う"
      operationId: "updateMstConfigJson"
      parameters:
        - $ref: '#/parameters/mstConfigJsonForPostPut'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /mstClientJson/{configName}:
    get:
      tags:
      - "adEvent"
      - "adSpot"
      - "cpEvent"
      - "cpSpot"
      summary: "MST_CONFIG_JSONからconfig_name(PK)を指定してデータを取得する"
      operationId: "readMstConfigJsonByConfigName"
      parameters:
        - $ref: '#/parameters/mstConfigJsonForGetByConfigName'
      responses:
        200:
          $ref: '#/responses/mstConfigJson'
        400:
          description: "Invalid status value"


  /trnBook:
    get:
      tags:
      - "adBook"
      summary: "TRN_BOOKからデータを全件取得する"
      operationId: "readTrnBook"
      responses:
        200:
          $ref: '#/responses/trnBookArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adBook"
      summary: "TRN_BOOKに新規データを登録する"
      operationId: "createTrnBook"
      parameters:
        - $ref: '#/parameters/trnBookArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adBook"
      summary: "TRN_BOOK情報の更新を行う"
      operationId: "updateTrnBook"
      parameters:
        - $ref: '#/parameters/trnBookArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnBook/{uuid}:
    get:
      tags:
      - "adBook"
      summary: "UUIDで指定したTRN_BOOK"
      operationId: "readTrnBookFindByUuid"
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          $ref: '#/responses/trnBookArray'
        400:
          description: "Invalid status value"
  /trnBookRating:
    get:
      tags:
      - "adBook"
      summary: "TRN_BOOK_RATINGからデータを全件取得する"
      operationId: "readTrnBookRating"
      responses:
        200:
          $ref: '#/responses/trnBookRatingArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adBook"
      summary: "TRN_BOOK_RATINGに新規データを登録する"
      operationId: "createTrnBookRating"
      parameters:
        - $ref: '#/parameters/trnBookRatingArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adBook"
      summary: "TRN_BOOK_RATING情報の更新を行う"
      operationId: "updateTrnBookRating"
      parameters:
        - $ref: '#/parameters/trnBookRatingArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnBookRating/{uuidBook}:
    get:
      tags:
      - "adBook"
      summary: "UUID BOOKでTRN_BOOK_RATINGの検索を行う"
      operationId: "readTrnBookRatingFindByUuidMovie"
      parameters:
        - $ref: '#/parameters/uuidBook'
      responses:
        200:
          $ref: '#/responses/trnBookArray'
        400:
          description: "Invalid status value"
  /trnBookResearch:
    get:
      tags:
      - "adBook"
      summary: "TRN_BOOK_RESEARCHからデータを全件取得する"
      operationId: "readTrnBookResearch"
      responses:
        200:
          $ref: '#/responses/trnBookResearchArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adBook"
      summary: "TRN_BOOK_RESEARCHに新規データを登録する"
      operationId: "createTrnBookResearch"
      parameters:
        - $ref: '#/parameters/trnBookResearchArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adBook"
      summary: "TRN_BOOK_RESEARCH情報の更新を行う"
      operationId: "updateTrnBookResearch"
      parameters:
        - $ref: '#/parameters/trnBookResearchArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnBookResearch/{uuidBook}:
    get:
      tags:
      - "adBook"
      summary: "UUID BOOKでTRN_BOOK_RESEARCHの検索を行う"
      operationId: "readTrnBookResearchFindByUuidMovie"
      parameters:
        - $ref: '#/parameters/uuidBook'
      responses:
        200:
          $ref: '#/responses/trnBookArray'
        400:
          description: "Invalid status value"

  /trnEvent:
    get:
      tags:
      - "adEvent"
      summary: "TRN_EVENTテーブルから全件のデータを取得する"
      operationId: "readEvent"
      responses:
        200:
          $ref: '#/responses/trnEventArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adEvent"
      summary: "TRN_EVENTテーブルにデータを新規登録する"
      operationId: "createEvent"
      parameters:
        - $ref: '#/parameters/trnEventArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adEvent"
      summary: "TRN_EVENTテーブル情報の更新を行う"
      operationId: "updateEvent"
      parameters:
        - $ref: '#/parameters/trnEventArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnEventResearch:
    get:
      tags:
      - "adEvent"
      summary: "TRN_EVENT_RESEARCHから全件のデータを取得する"
      operationId: "readEventResearch"
      responses:
        200:
          $ref: '#/responses/trnEventResearchArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adEvent"
      summary: "TRN_EVENT_RESEARCH情報のデータを新規追加"
      operationId: "createEventResearch"
      parameters:
        - $ref: '#/parameters/trnEventResearch'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adEvent"
      summary: "TRN_EVENT_RESEARCH情報の更新を行う"
      operationId: "updateEventResearch"
      parameters:
        - $ref: '#/parameters/trnEventResearch'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnEventResearch/{uuid}:
    get:
      tags:
      - "adEvent"
      summary: "UUIDで指定したTRN_EVENT_RESEARCH"
      operationId: "readTrnEventFindByUuid"
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          $ref: '#/responses/trnEventResearchArray'
        400:
          description: "Invalid status value"
          

  /trnMovie:
    get:
      tags:
      - "adMovie"
      summary: "TRN_MOVIEからデータを全件取得する"
      operationId: "readTrnMovie"
      responses:
        200:
          $ref: '#/responses/trnMovieArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adMovie"
      summary: "TRN_MOVIEに新規データを登録する"
      operationId: "createTrnMovie"
      parameters:
        - $ref: '#/parameters/trnMovieArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adMovie"
      summary: "TRN_MOVIE情報の更新を行う"
      operationId: "updateTrnMovie"
      parameters:
        - $ref: '#/parameters/trnMovieArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnMovie/{uuid}:
    get:
      tags:
      - "adMovie"
      summary: "UUIDで指定したTRN_MOVIE"
      operationId: "readTrnMovieFindByUuid"
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          $ref: '#/responses/trnMovieArray'
        400:
          description: "Invalid status value"
  /trnMovieRating:
    get:
      tags:
      - "adMovie"
      summary: "TRN_MOVIE_RATINGからデータを全件取得する"
      operationId: "readTrnMovieRating"
      responses:
        200:
          $ref: '#/responses/trnMovieRatingArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adMovie"
      summary: "TRN_MOVIE_RATINGに新規データを登録する"
      operationId: "createTrnMovieRating"
      parameters:
        - $ref: '#/parameters/trnMovieRatingArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adMovie"
      summary: "TRN_MOVIE_RATING情報の更新を行う"
      operationId: "updateTrnMovieRating"
      parameters:
        - $ref: '#/parameters/trnMovieRatingArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnMovieRating/{uuidMovie}:
    get:
      tags:
      - "adMovie"
      summary: "UUID MOVIEでTRN_MOVIE_RATINGの検索を行う"
      operationId: "readTrnMovieRatingFindByUuidMovie"
      parameters:
        - $ref: '#/parameters/uuidMovie'
      responses:
        200:
          $ref: '#/responses/trnMovieArray'
        400:
          description: "Invalid status value"
  /trnMovieResearch:
    get:
      tags:
      - "adMovie"
      summary: "TRN_MOVIE_RESEARCHからデータを全件取得する"
      operationId: "readTrnMovieResearch"
      responses:
        200:
          $ref: '#/responses/trnMovieResearchArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adMovie"
      summary: "TRN_MOVIE_RESEARCHに新規データを登録する"
      operationId: "createTrnMovieResearch"
      parameters:
        - $ref: '#/parameters/trnMovieResearchArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adMovie"
      summary: "TRN_MOVIE_RESEARCH情報の更新を行う"
      operationId: "updateTrnMovieResearch"
      parameters:
        - $ref: '#/parameters/trnMovieResearchArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnMovieResearch/{uuidMovie}:
    get:
      tags:
      - "adMovie"
      summary: "UUID MOVIEでTRN_MOVIE_RESEARCHの検索を行う"
      operationId: "readTrnMovieResearchFindByUuidMovie"
      parameters:
        - $ref: '#/parameters/uuidMovie'
      responses:
        200:
          $ref: '#/responses/trnMovieArray'
        400:
          description: "Invalid status value"
  /trnMovieUrl:
    get:
      tags:
      - "adMovie"
      summary: "TRN_MOVIE_URLからデータを全件取得する"
      operationId: "readTrnMovieUrl"
      responses:
        200:
          $ref: '#/responses/trnMovieUrlArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adMovie"
      summary: "TRN_MOVIE_URLに新規データを登録する"
      operationId: "createTrnMovieUrl"
      parameters:
        - $ref: '#/parameters/trnMovieUrlArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adMovie"
      summary: "TRN_MOVIE_URL情報の更新を行う"
      operationId: "updateTrnMovieUrl"
      parameters:
        - $ref: '#/parameters/trnMovieUrlArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnMovieUrl/{uuidMovie}:
    get:
      tags:
      - "adMovie"
      summary: "UUID MOVIEでTRN_MOVIE_URLの検索を行う"
      operationId: "readTrnMovieUrlFindByUuidMovie"
      parameters:
        - $ref: '#/parameters/uuidMovie'
      responses:
        200:
          $ref: '#/responses/trnMovieArray'
        400:
          description: "Invalid status value"




  /trnPerson:
    get:
      tags:
      - "adPerson"
      summary: "TRN_BOOKからデータを全件取得する"
      operationId: "readTrnPerson"
      responses:
        200:
          $ref: '#/responses/trnPersonArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adPerson"
      summary: "TRN_BOOKに新規データを登録する"
      operationId: "createTrnPerson"
      parameters:
        - $ref: '#/parameters/trnPersonArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adPerson"
      summary: "TRN_BOOK情報の更新を行う"
      operationId: "updateTrnPerson"
      parameters:
        - $ref: '#/parameters/trnPersonArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnPerson/{uuid}:
    get:
      tags:
      - "adPerson"
      summary: "UUIDで指定したTRN_BOOK"
      operationId: "readTrnPersonFindByUuid"
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          $ref: '#/responses/trnPersonArray'
        400:
          description: "Invalid status value"
  /trnPersonProduct:
    get:
      tags:
      - "adPerson"
      summary: "TRN_BOOK_RATINGからデータを全件取得する"
      operationId: "readTrnPersonProduct"
      responses:
        200:
          $ref: '#/responses/trnPersonProductArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adPerson"
      summary: "TRN_BOOK_RATINGに新規データを登録する"
      operationId: "createTrnPersonProduct"
      parameters:
        - $ref: '#/parameters/trnPersonProductArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adBook"
      summary: "TRN_BOOK_RATING情報の更新を行う"
      operationId: "updateTrnPersonProduct"
      parameters:
        - $ref: '#/parameters/trnPersonProductArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnPersonProduct/{uuidBook}:
    get:
      tags:
      - "adPerson"
      summary: "UUID BOOKでTRN_BOOK_RATINGの検索を行う"
      operationId: "readTrnPersonProductFindByUuidMovie"
      parameters:
        - $ref: '#/parameters/uuidBook'
      responses:
        200:
          $ref: '#/responses/trnPersonProductArray'
        400:
          description: "Invalid status value"
  /trnPersonTalk:
    get:
      tags:
      - "adPerson"
      summary: "TRN_BOOK_RESEARCHからデータを全件取得する"
      operationId: "readTrnPersonTalk"
      responses:
        200:
          $ref: '#/responses/trnPersonTalkArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adPerson"
      summary: "TRN_BOOK_RESEARCHに新規データを登録する"
      operationId: "createTrnPersonTalk"
      parameters:
        - $ref: '#/parameters/trnPersonTalkArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adPerson"
      summary: "TRN_BOOK_RESEARCH情報の更新を行う"
      operationId: "updateTrnPersonTalk"
      parameters:
        - $ref: '#/parameters/trnPersonTalkArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnPersonTalk/{uuidBook}:
    get:
      tags:
      - "adPerson"
      summary: "UUID BOOKでTRN_BOOK_RESEARCHの検索を行う"
      operationId: "readTrnPersonTalkFindByUuidMovie"
      parameters:
        - $ref: '#/parameters/uuidBook'
      responses:
        200:
          $ref: '#/responses/trnPersonTalkArray'
        400:
          description: "Invalid status value"




  /trnSpot:
    get:
      tags:
      - "adSpot"
      summary: "TRN_SPOTからデータを全件取得する"
      operationId: "readTrnSpot"
      responses:
        200:
          $ref: '#/responses/trnSpotArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adSpot"
      summary: "TRN_SPOTに新規データを登録する"
      operationId: "createTrnSpot"
      parameters:
        - $ref: '#/parameters/trnSpotArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adSpot"
      summary: "TRN_SPOT情報の更新を行う"
      operationId: "updateTrnSpot"
      parameters:
        - $ref: '#/parameters/trnSpotArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnSpot/findTop10ByOrderByModDate:
    get:
      tags:
      - "adSpot"
      - "cpSpot"
      summary: "TRN_SPOTから修正日で順序付けを行い昇順で10件取得する"
      operationId: "trnSpotFindTop10ByOrderByModDate"
      responses:
        200:
          $ref: '#/responses/trnSpotArray'
        400:
          description: "Invalid status value"

  /trnSpotResearch:
    get:
      tags:
      - "adSpot"
      summary: "TRN_SPOT_RESEARCHから全件のデータを取得する"
      operationId: "readTrnSpotResearch"
      responses:
        200:
          $ref: '#/responses/trnSpotResearchArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adSpot"
      summary: "TRN_SPOT_RESEARCH情報のデータを新規追加"
      operationId: "createTrnSpotResearch"
      parameters:
        - $ref: '#/parameters/trnSpotResearchArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adSpot"
      summary: "TRN_SPOT_RESEARCH情報の更新を行う"
      operationId: "updateTrnSpotResearch"
      parameters:
        - $ref: '#/parameters/trnSpotResearchArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnSpotResearch/{uuid}:
    get:
      tags:
      - "adSpot"
      summary: "UUIDで指定したTRN_SPOT_RESEARCH"
      operationId: "readTrnSpotResearchFindByUuid"
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          $ref: '#/responses/trnSpotResearchArray'
        400:
          description: "Invalid status value"

  /trnSpotPr:
    get:
      tags:
      - "adSpot"
      summary: "TRN_SPOT_PRから全件のデータを取得する"
      operationId: "readTrnSpotPr"
      responses:
        200:
          $ref: '#/responses/trnSpotPrArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adSpot"
      summary: "TRN_SPOT_PR情報のデータを新規追加"
      operationId: "createTrnSpotPr"
      parameters:
        - $ref: '#/parameters/trnSpotPrArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adSpot"
      summary: "TRN_SPOT_PR情報の更新を行う"
      operationId: "updateTrnSpotPr"
      parameters:
        - $ref: '#/parameters/trnSpotPrArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnSpotPr/{uuid}:
    get:
      tags:
      - "adSpot"
      summary: "UUIDで指定したTRN_SPOT_PR"
      operationId: "readTrnSpotPrFindByUuid"
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          $ref: '#/responses/trnSpotPrArray'
        400:
          description: "Invalid status value"



parameters:
  bearerAuth:
    name: Authorization
    description: bearer <JWT token>
    required: true
    in: header
    type: string
  chart:
    name: chart
    description: "chartのtemplateデータ"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/chart"
  chartDate:
    name: chartDate
    description: "chart出力対象の日付"
    required: true
    in: path
    type: "string"
  mstConfigJsonForGetByConfigName:
    name: configName
    description: "MST_CONFIG_JSONをconfig_nameで検索条件をかける際に使用する"
    required: true
    in: path
    type: "string"
  mstConfigJsonForPostPut:
    name: mstConfigJsonForPostPut
    description: "MST_CONFIG_JSONの新規登録・更新する際のパラメータ情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/mstClientJson"
  publish:
    name: publish
    description: "記事情報"
    required: true
    in: body
    schema:
      $ref: '#/definitions/publish'
  publishArray:
    name: publishArray
    description: "配列単位の記事情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/publish"
  trnBookArray:
    name: trnBookArray
    description: "配列単位の本情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnBook"
  trnBookRatingArray:
    name: trnBookRatingArray
    description: "配列単位の本評価情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnBookRating"
  trnBookResearchArray:
    name: trnMovieResearchArray
    description: "配列単位の本調査情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnBookResearch"
  trnEventArray:
    name: trnEventArray
    description: "配列単位のTRN_EVENTデータ"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnEvent"
  trnEventResearch:
    name: eventResearch
    description: "Event Researchデータ"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnEventResearch"
  trnMovieArray:
    name: trnMovieArray
    description: "配列単位の映画情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnMovie"
  trnMovieRatingArray:
    name: trnMovieRatingArray
    description: "配列単位の映画評価情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnMovieRating"
  trnMovieResearchArray:
    name: trnMovieResearchArray
    description: "配列単位の映画調査情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnMovieResearch"
  trnMovieUrlArray:
    name: trnMovieUrlArray
    description: "配列単位の映画掲載情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnMovieUrl"
  trnPersonArray:
    name: trnPersonArray
    description: "配列単位の人物情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnPerson"
  trnPersonProductArray:
    name: trnMovieRatingArray
    description: "配列単位の人の作品情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnPersonProduct"
  trnPersonTalkArray:
    name: trnMovieResearchArray
    description: "配列単位の会話情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnPersonTalk"
  trnSpot:
    name: trnSpot
    description: "観光場所情報"
    required: true
    in: body
    schema:
      $ref: '#/definitions/trnSpot'
  trnSpotArray:
    name: trnSpotArray
    description: "配列単位の観光場所情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnSpot"
  trnSpotPrArray:
    name: trnSpotPrArray
    description: "配列単位の観光場所PR情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnSpotPr"
  trnSpotResearchArray:
    name: trnSpotResearchArray
    description: "配列単位の観光場所調査情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnSpotResearch"
  timeLine:
    name: timeLine
    description: "Userテーブルに格納されているtimelineのJsonの型"
    required: true
    in: body
    schema:
      $ref: '#/definitions/timeline'
  uuid:
    name: uuid
    description: "UUID検索用パラメーター"
    required: true
    in: path
    type: "string"
  uuidBook:
    name: uuidBook
    description: "TRN_BOOKのUUID検索用パラメーター"
    required: true
    in: path
    type: "string"
  uuidMovie:
    name: uuidMovie
    description: "TRN_MOVIEのUUID検索用パラメーター"
    required: true
    in: path
    type: "string"
  uuidPerson:
    name: uuidPerson
    description: "TRN_PERSONのUUID検索用パラメーター"
    required: true
    in: path
    type: "string"
      
responses:
  categoryMenuArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/categoryMenu"
  chart:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/chart"
  chartDate:
    description: "chart出力対象のJsonデータ"
    schema:
      type: "string"
  mstConfigJson:
    description: "successful operation"
    schema:
      $ref: "#/definitions/mstClientJson"
  mstConfigJsonArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/mstClientJson"
  publish:
    description: "successful operation"
    schema:
      $ref: "#/definitions/publish"
  publishArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/publish"
  trnBookArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnBook"
  trnBookRatingArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnBookRating"
  trnBookResearchArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnBookResearch"
  trnEventArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnEvent"
  trnEventResearchArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnEventResearch"
  trnMovieArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnMovie"
  trnMovieRatingArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnMovieRating"
  trnMovieResearchArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnMovieResearch"
  trnMovieUrlArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnMovieUrl"
  trnPersonArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnPerson"
  trnPersonProductArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnPersonProduct"
  trnPersonTalkArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnPersonTalk"
  trnSpotArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnSpot"
  trnSpotPrArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnSpotPr"
  trnSpotResearchArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnSpotResearch"

definitions:
  categoryMenu:
    type: "object"
    properties:
      category_name:
        type: "string"
        description: "カテゴリーの名称"
      category_sum:
        type: "string"
        description: "任意のカテゴリーに属する記事数"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
  chart:
    type: "object"
    properties:
      chart_name:
        type: "string"
        description: "チャートの名称"
      chart_lib:
        type: "string"
        description: "使用するチャートのライブラリー"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      chart_date:
        type: "string"
        description: "チャートの出力対象日付"
      chart_value:
        type: "string"
        description: "チャート出力用データ"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
  mstClientJson:
    type: "object"
    properties:
      json_name:
        type: "string"
        description: "コンフィグ設定名"
        enum:
        - "Event Tree"
        - "Spot Tree"
        - "Food"
        - "Organization"
        - "Publisher"
        - "Retail"
        - "Twitter"
      json:
        type: "string"
        description: "設定値"
      remarks:
        type: "string"
        description: "備考"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
  publish:
    type: "object"
    properties:
      publishUuid:
        type: "string"
        description: "PublishのUUID"
      publishTitle:
        type: "string"
        description: "伝達する情報のタイトル"
      publishCategory:
        type: "string"
        description: "伝達する情報の種別"
      publishIconUrl:
        type: "string"
        description: "伝達記事情報のアイコン"
      publishSummary:
        type: "string"
        description: "伝達記事情報の要約"
      publishText:
        type: "string"
        description: "伝達する情報の中身"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      isLatestToward:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      latest_flg:
        type: "integer"
        format: "int32"
      last_flg:
        type: "integer"
        format: "int32"
      release_flg:
        type: "integer"
        format: "int32"
      delete_flg:
        type: "integer"
        format: "int32"
  sessionStorage:
    type: "object"
    properties:
      id:
        type: "string"
      dateTime:
        type: "string"
      temporary:
        type: "boolean"
      tokenID:
        type: "string"
      food:
        type: "object"
        properties:
          ramen:
            type: "number"
      org:
        type: "object"
        properties:
          degitalArt:
            type: "number"
            
  trnBook:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_BOOKのUUID"
      author:
        type: "string"
        description: "本の執筆者"
      book_title:
        type: "string"
        description: "本のタイトル"
      book_category:
        type: "string"
        description: "本の種別"
        enum:
        - "Amusement"
        - "Coffee Shop"
        - "Food"
        - "Organization"
        - "Publisher"
        - "Retail"
        - "Spot"
        - "Twitter"
      year:
        type: "string"
        description: "映画の上映年"
      publish_date:
        type: "string"
        description: "本の発行日"
      book_to_movie:
        type: "string"
        description: "TRN_MOVIEのUUID"
      url:
        type: "string"
        description: "本のPR用URL"
      twitter:
        type: "string"
        description: "本の公式twitter"
      summaryExcel:
        type: "string"
        description: "本を要約したExcelのURL"
      summaryPdf:
        type: "string"
        description: "本を要約したPDFのURL"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
            
  trnBookRating:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_BOOK_RATINGのUUID"
      uuidMovie:
        type: "string"
        description: "TRN_BOOKのUUID"
      researchWord:
        type: "string"
        description: "評価サイト検索時のGoogle検索文字列"
      siteDomain:
        type: "string"
        description: "評価サイトのドメイン"
      siteName:
        type: "string"
        description: "評価サイトの名称"
      siteUrl:
        type: "string"
        description: "評価サイトのURL"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"

  trnBookResearch:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_BOOK_RESEARCHのUUID"
      uuidMovie:
        type: "string"
        description: "TRN_BOOKのUUID"
      researchWord:
        type: "string"
        description: "調査サイト検索時のGoogle検索文字列"
      siteDomain:
        type: "string"
        description: "調査サイトのドメイン"
      siteName:
        type: "string"
        description: "調査サイトの名称"
      siteUrl:
        type: "string"
        description: "調査サイトのURL"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
            
            
  trnEvent:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_EVENT_RESEARCHのUUID"
      research_uuid:
        type: "string"
        description: "TRN_EVENTのUUID"
      domainIcon:
        type: "string"
        description: "ドメインのFabicon"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      eventUrl:
        type: "string"
        format: "URL"
      eventPdf:
        type: "string"
        description: "Eventの詳細を記載したPDF"
      eventCategory:
        type: "string"
        description: "Eventのカテゴリー"
        enum:
        - "Digital Art"
        - "Ramen"
      eventTitle:
        type: "string"
        description: "Eventの名前"
      eventYear:
        type: "string"
        format: "yyyy"
      eventStartDate:
        type: "string"
        format: "yyyyMMdd"
      startDate:
        type: "string"
        format: date
      startDatetime:
        type: "string"
        format: date-time
      eventEndDate:
        type: "string"
        format: "yyyyMMdd"
      endDate:
        type: "string"
        format: date
      endDatetime:
        type: "string"
        format: date-time
      eventSpanType:
        type: integer
        format: int32
        enum:
          - 1
          - 2
          - 3
        x-enumNames:
          - OneDay
          - Period
          - AllTime 
      district:
        type: "string"
        description: "Eventの開催場所"
        enum:
        - "Shinjuku"
      longitude:
        type: "integer"
        format: "Double"
        description: "Event開催場所の経度"
      latitude:
        type: "integer"
        format: "Double"
        description: "Event開催場所の緯度"
      color:
        type: "string"
        description: "表示の色"
        enum:
        - "blue"
        - "black"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      deleteFlg:
        type: "integer"
        format: "int32"
        
  trnEventResearch:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_EVENT_RESEARCHのUUID"
      researchWord:
        type: "string"
        description: "Google検索文言"
      researchDomain:
        type: "string"
        format: "URL"
      domainIcon:
        type: "string"
        description: "ドメインのFabicon"
      siteAdminType:
        type: "string"
        description: "サイトの運営者種別"
        enum:
        - "Organization"
        - "Person"
        - "Twitter(Org)"
        - "Twitter(Person)"
      siteName:
        type: "string"
        description: "サイト(ドメイン)の名称"
      siteCategory:
        type: "string"
        description: "リサーチ用サイトのカテゴリ"
        enum:
        - "Amusement"
        - "Culture"
        - "Food"
        - "Publisher"
        - "Retail"
        - "Video & Movie"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      deleteFlg:
        type: "integer"
        format: "int32"
        
  trnMovie:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_MOVIEのUUID"
      title:
        type: "string"
        description: "映画のタイトル"
      category:
        type: "string"
        description: "映画の種別"
        enum:
        - "Amusement"
        - "Coffee Shop"
        - "Food"
        - "Organization"
        - "Publisher"
        - "Retail"
        - "Spot"
        - "Twitter"
      year:
        type: "string"
        description: "映画の上映年"
      releaseDate:
        type: "string"
        description: "映画の上映日"
      author:
        type: "string"
        description: "映画の著者"
      director:
        type: "string"
        description: "映画の監督"
      mainActor:
        type: "string"
        description: "映画のメイン俳優"
      mainActress:
        type: "string"
        description: "映画のメイン女優"
      otherCast:
        type: "string"
        description: "映画のキャスト"
      bookUrl:
        type: "string"
        description: "映画の原作脚本URL"
      chinaName:
        type: "string"
        description: "中国語での映画名"
      pinyinName:
        type: "string"
        description: "中国語でのピンイン"
      officialUrl:
        type: "string"
        description: "映画の公式サイト"
      twitter:
        type: "string"
        description: "映画の公式twitter"
      summaryExcel:
        type: "string"
        description: "映画を要約したExcelのURL"
      summaryPdf:
        type: "string"
        description: "映画を要約したPDFのURL"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
        
  trnMovieRating:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_MOVIE_RATINGのUUID"
      uuidMovie:
        type: "string"
        description: "TRN_MOVIEのUUID"
      researchWord:
        type: "string"
        description: "評価サイト検索時のGoogle検索文字列"
      siteDomain:
        type: "string"
        description: "評価サイトのドメイン"
      siteName:
        type: "string"
        description: "評価サイトの名称"
      siteUrl:
        type: "string"
        description: "評価サイトのURL"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"

  trnMovieResearch:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_MOVIE_RESEARCHのUUID"
      uuidMovie:
        type: "string"
        description: "TRN_MOVIEのUUID"
      researchWord:
        type: "string"
        description: "調査サイト検索時のGoogle検索文字列"
      siteDomain:
        type: "string"
        description: "調査サイトのドメイン"
      siteName:
        type: "string"
        description: "調査サイトの名称"
      siteUrl:
        type: "string"
        description: "調査サイトのURL"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
        

  trnMovieUrl:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_MOVIE_URLのUUID"
      uuidMovie:
        type: "string"
        description: "TRN_MOVIEのUUID"
      researchWord:
        type: "string"
        description: "掲載サイト検索時のGoogle検索文字列"
      siteDomain:
        type: "string"
        description: "掲載サイトのドメイン"
      siteName:
        type: "string"
        description: "掲載サイトの名称"
      siteUrl:
        type: "string"
        description: "掲載サイトのURL"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"



  trnPerson:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_PERSONのUUID"
      name:
        type: "string"
        description: "名前"
      age:
        type: "string"
        description: "年齢"
      sex:
        type: "string"
        description: "性別"
        enum:
        - "Male"
        - "Female"
      job:
        type: "string"
        description: "職業"
        enum:
        - "Novelist"
      nationality:
        type: "string"
        description: "国籍"
      birthDay:
        type: "string"
        description: "誕生日"
      birthPlace:
        type: "string"
        description: "出生場所"
      address:
        type: "string"
        description: "住所"
      hobby:
        type: "string"
        description: "趣味"
        enum:
        - "Male"
        - "Female"
      height:
        type: "number"
        description: "身長"
      weight:
        type: "number"
        description: "体重"
      instagram:
        type: "string"
        description: "インスタグラム"
      facebook:
        type: "string"
        description: "フェイスブック"
      twitter:
        type: "string"
        description: "ツイッター"        
      summaryPdf:
        type: "string"
        description: "PDF"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
        

  trnPersonProduct:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_PERSON_PRODUCTのUUID"
      uuidPerson:
        type: "string"
        description: "TRN_PERSONのUUID"
      product_title:
        type: "string"
        description: "製品名称"
      product_type:
        type: "string"
        description: "製品種別"
        enum:
        - "Novel"
      releaseDate:
        type: "string"
        description: "日付"
      productSummary:
        type: "string"
        description: "製品概要"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"

  trnPersonTalk:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_PERSON_TALKのUUID"
      uuidPerson:
        type: "string"
        description: "TRN_PERSONのUUID"
      opportunity:
        type: "string"
        description: "会話のきっかけ"
      talk_date:
        type: "string"
        description: "話した日"
      talk_place:
        type: "string"
        description: "話した場所"
      talk_about:
        type: "string"
        description: "話した内容"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"

  trnSpot:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_SPOTのUUID"
      spotName:
        type: "string"
        description: "観光目的を持つ場所の名前"
      spotAddress:
        type: "string"
        description: "観光目的を持つ場所の住所"
      spotWard:
        type: "string"
        description: "観光目的を持つ場所の所在地区"
        enum:
        - "Bunkyo"
        - "Chiyoda"
        - "Chuo"
        - "Minato"
        - "Nakano"
        - "Shibuya"
        - "Shinjuku"
        - "Toshima"
      spotCategory:
        type: "string"
        description: "観光目的を持つ場所の種別"
        enum:
        - "Amusement"
        - "Coffee Shop"
        - "Food"
        - "Organization"
        - "Publisher"
        - "Retail"
        - "Spot"
        - "Twitter"
      spotPictureUrl:
        type: "string"
        description: "観光目的を持つ場所の写真情報"
      spotDescription:
        type: "string"
        description: "観光目的を持つ場所の概要情報"
      spotPdf:
        type: "string"
        description: "観光目的を持つ場所のPDFのパス"
      spotLatitude:
        type: "string"
        description: "観光目的を持つ場所の経度"
      spotLongitude:
        type: "string"
        description: "観光目的を持つ場所の緯度"
      zoom:
        type: "number"
        description: "Google Mapのzoom度"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"

  trnSpotPr:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_SPOT_PRのUUID"
      spot_uuid:
        type: "string"
        description: "TRN_SPOTのUUID"
      spot_pr_snstype:
        type: "string"
        description: "観光場所のPRしているSNS区分"
        enum:
        - "twitter"
        - "facebook"
      spot_pr_name:
        type: "string"
        description: "観光場所をPRしている名称"
      spot_pr_url:
        type: "string"
        format: "URL"
        description: "観光場所をPRしているURL"
      remarks:
        type: "string"
        description: "参考サイト名に関する備考"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"

  trnSpotResearch:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_SPOT_RESEARCHのUUID"
      spot_uuid:
        type: "string"
        description: "TRN_SPOTのUUID"
      researchWord:
        type: "string"
        description: "Google検索文言"
      researchDomain:
        type: "string"
        format: "URL"
      domainIcon:
        type: "string"
        description: "ドメインのFabicon"
      siteAdminType:
        type: "string"
        description: "サイトの運営者種別"
        enum:
        - "Organization"
        - "Person"
      siteName:
        type: "string"
        description: "観光目的情報を作成する際の参考サイト名"
      siteUrl:
        type: "string"
        description: "観光目的情報を作成する際の参考サイトURL"
      remarks:
        type: "string"
        description: "参考サイト名に関する備考"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
        
  timeline:
    type: "object"
    properties:
      id:
        type: "string"
      start:
        type: "string"
      end:
        type: "string"
      name:
        type: "string"
      move:
        type: "string"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"