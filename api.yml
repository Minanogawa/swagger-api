swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger TokyoTravel"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:4200"
basePath: "/"
tags:
  - name: "auth"
    description: "Oauth2により認証を行う"
  - name: "adChart"
    description: "Administration Chartページにおけるデータ通信定義"
  - name: "adEvent"
    description: "Administration Eventページにおけるデータ通信定義"
  - name: "adMaster"
    description: "Administration Masterページにおけるデータ通信定義"
  - name: "adSpot"
    description: "Administration Spotページ、主にSPOT情報の情報を管理する画面"
  - name: "adTop"
    description: "Administration Topページにおけるデータ通信定義"
  - name: "cpEvent"
    description: "Content Eventページにおけるデータ通信定義"
  - name: "cpSpot"
    description: "Content Spotページ、Spot情報をユーザーに表示される"
  - name: "cpTop"
    description: "Content Topページにおけるデータ通信定義"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
  - name: "global"
    description: "Webサイトの特定のページに該当しない処理連携"
  
schemes:
  - "https"
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"

paths:
  /auth/facebook:
    get:
      tags:
      - "auth"
      summary: "Facebook認証"
      description: "Facebookにより認証情報を取得する"
      operationId: "getUserProfileWithFacebook"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /auth/github:
    get:
      tags:
      - "auth"
      summary: "github認証"
      description: "githubにより認証情報を取得する"
      operationId: "getUserProfileWithGithub"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"

  /adChart:
    get:
      tags:
      - "adChart"
      summary: "Chartのテンプレート情報を取得"
      operationId: "readChartTemplate"
      responses:
        200:
          $ref: '#/responses/chart'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adChart"
      summary: "chartのテンプレート情報を新規追加"
      operationId: "createChartTemplate"
      parameters:
        - $ref: '#/parameters/chart'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid input"


  /adTop/treeMenu:
    get:
      tags:
      - "adTop"
      summary: "Administration Topページ、もしくはTopページにおいてTreeMenuを取得する"
      operationId: "readTreeMenu"
      responses:
        200:
           description: "successful operation return json menu data"
        400:
          description: "Invalid status value"
          
  /adTop/latestMenu:
    get:
      tags:
      - "adTop"
      summary: "Administration Topページ、もしくはTopページにおいて最新記事情報を取得する"
      operationId: "readLatest"
      responses:
        200:
           $ref: '#/responses/publishArray'
        400:
          description: "Invalid status value"

  /adTop/publish:
    get:
      tags:
      - "adTop"
      summary: "Administration TopページにおいてPublish情報を取得する"
      operationId: "readPublishInfo"
      responses:
        200:
          $ref: '#/responses/publishArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adTop"
      summary: "Administration Topページにおいて、記事を登録・更新をする"
      operationId: "createPublishInfo"
      parameters:
        - $ref: '#/parameters/publishArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
    put:
      tags:
      - "adTop"
      summary: "Administration Topページにおいて、記事情報の修正を行う"
      operationId: "updatePublish"
      parameters:
        - $ref: '#/parameters/publishArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"

  /cpEvent/event:
    get:
      tags:
      - "cpEvent"
      summary: "Calendarに出力するEvent情報を取得する"
      operationId: "getEventCalendar"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/trnEvent"
        400:
          description: "Invalid status value"

  /cpTop/chart/{chartDate}:
    get:
      tags:
      - "cpTop"
      summary: "Topページに出力するBasic Lineチャート用のデータを取得する"
      operationId: "readMonthlyChart"
      parameters:
        - $ref: '#/parameters/chartDate'
      responses:
        200:
          description: "Chartデータ用のJSON文字列を返却"
        400:
          description: "Invalid status value"
  /cpTop/publish:
    get:
      tags:
      - "cpTop"
      summary: "Topページに出力する記事情報を画面のパラメーターから取得する"
      operationId: "readPublish"
      parameters:
        - $ref: '#/parameters/publish'
      responses:
        200:
          $ref: "#/responses/publish"
        400:
          description: "Invalid status value"
  /cpTop/publish/categoryMenu:
    get:
      tags:
      - "cpTop"
      summary: "Topページの右側に出力するカテゴリー分類メニューを取得する"
      operationId: "readPublishCategory"
      responses:
        200:
          $ref: "#/responses/categoryMenuArray"
        400:
          description: "Invalid status value"
  /cpTop/publish/latestMenu:
    get:
      tags:
      - "cpTop"
      summary: "Topページの右側に出力する最新記事メニューを5件取得する"
      operationId: "readPublishLatest"
      responses:
        200:
          $ref: '#/responses/publishArray'
        400:
          description: "Invalid status value"

  /global/user:
    get:
      tags: 
      - "global"
      summary: "User情報を取得する"
      operationId: "getUserInfo"
      parameters:
        - $ref: '#/parameters/bearerAuth'
      responses:
        200:
          description: "正常応答"
          schema:
            $ref: '#/definitions/timeline'
        400:
          description: "Invalid status value"
          
  /global/user/timeline:
    get:
      tags: 
      - "global"
      summary: "UserのTimelineデータを取得する"
      operationId: "geTimeLine"
      parameters:
        - $ref: '#/parameters/bearerAuth'
      responses:
        200:
          description: "正常応答"
          schema:
            type: array
            items:
              $ref: '#/definitions/timeline'
        400:
          description: "Invalid status value"
    put:
      tags:
      - "global"
      summary: "ダイアログで出力されたイベント情報のStarがON/OFFになった際に、その状態を保存する"
      operationId: "putTimeline"
      parameters:
        - $ref: '#/parameters/bearerAuth'
        - $ref: '#/parameters/timeLine'
      responses:
        200:
          description: "正常応答"
          schema:
            type: "string"
            description: "ファイルパス"
        400:
          description: "Invalid status value"
          
  /global/storage:
    post:
      tags: 
        - "global"
      summary: "Session Storageにため込んでいる情報をELKに登録する"
      operationId: "sStorageDataToServer"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/sessionStorage"
      responses:
        200:
          description: "成功時レスポンス"
        400:
          description: "Invalid status value"

  /mstClientJson:
    get:
      tags:
      - "adMaster"
      summary: "MST_CONFIG_JSONテーブルからデータを全件取得する"
      operationId: "readMstConfigJson"
      responses:
        200:
          $ref: '#/responses/mstConfigJsonArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adMaster"
      summary: "MST_CONFIG_JSONテーブルに新規データを登録する"
      operationId: "createMstConfigJson"
      parameters:
        - $ref: '#/parameters/mstConfigJsonForPostPut'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
    put:
      tags:
      - "adMaster"
      summary: "MST_CONFIG_JSONテーブルの更新を行う"
      operationId: "updateMstConfigJson"
      parameters:
        - $ref: '#/parameters/mstConfigJsonForPostPut'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /mstClientJson/{configName}:
    get:
      tags:
      - "adSpot"
      summary: "MST_CONFIG_JSONからconfig_name(PK)を指定してデータを取得する"
      operationId: "readMstConfigJsonByConfigName"
      parameters:
        - $ref: '#/parameters/mstConfigJsonForGetByConfigName'
      responses:
        200:
          $ref: '#/responses/mstConfigJson'
        400:
          description: "Invalid status value"


  /trnEventResearch:
    get:
      tags:
      - "adEvent"
      summary: "TRN_EVENT_RESEARCHから全件のデータを取得する"
      operationId: "readEventResearch"
      responses:
        200:
          $ref: '#/responses/trnEventResearchArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adEvent"
      summary: "TRN_EVENT_RESEARCH情報のデータを新規追加"
      operationId: "createEventResearch"
      parameters:
        - $ref: '#/parameters/trnEventResearch'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adEvent"
      summary: "TRN_EVENT_RESEARCH情報の更新を行う"
      operationId: "updateEventResearch"
      parameters:
        - $ref: '#/parameters/trnEventResearch'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"

  /trnEvent:
    get:
      tags:
      - "adEvent"
      summary: "TRN_EVENTテーブルから全件のデータを取得する"
      operationId: "readEvent"
      responses:
        200:
          $ref: '#/responses/trnEventArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adEvent"
      summary: "TRN_EVENTテーブルにデータを新規登録する"
      operationId: "createEvent"
      parameters:
        - $ref: '#/parameters/trnEventArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adEvent"
      summary: "TRN_EVENTテーブル情報の更新を行う"
      operationId: "updateEvent"
      parameters:
        - $ref: '#/parameters/trnEventArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"

  /trnSpot:
    get:
      tags:
      - "adSpot"
      summary: "TRN_SPOTからデータを全件取得する"
      operationId: "readTrnSpot"
      responses:
        200:
          $ref: '#/responses/trnSpotArray'
        400:
          description: "Invalid status value"
    post:
      tags:
      - "adSpot"
      summary: "TRN_SPOTに新規データを登録する"
      operationId: "createTrnSpot"
      parameters:
        - $ref: '#/parameters/trnSpotArray'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - "adSpot"
      summary: "TRN_SPOT情報の更新を行う"
      operationId: "updateTrnSpot"
      parameters:
        - $ref: '#/parameters/trnSpotArray'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /trnSpot/findTop10ByOrderByModDate:
    get:
      tags:
      - "adSpot"
      - "cpSpot"
      summary: "TRN_SPOTから修正日で順序付けを行い昇順で10件取得する"
      operationId: "trnSpotFindTop10ByOrderByModDate"
      responses:
        200:
          $ref: '#/responses/trnSpotArray'
        400:
          description: "Invalid status value"


parameters:
  bearerAuth:
    name: Authorization
    description: bearer <JWT token>
    required: true
    in: header
    type: string
  chart:
    name: chart
    description: "chartのtemplateデータ"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/chart"
  chartDate:
    name: chartDate
    description: "chart出力対象の日付"
    required: true
    in: path
    type: "string"
  mstConfigJsonForGetByConfigName:
    name: configName
    description: "MST_CONFIG_JSONをconfig_nameで検索条件をかける際に使用する"
    required: true
    in: path
    type: "string"
  mstConfigJsonForPostPut:
    name: mstConfigJsonForPostPut
    description: "MST_CONFIG_JSONの新規登録・更新する際のパラメータ情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/mstClientJson"
  publish:
    name: publish
    description: "記事情報"
    required: true
    in: body
    schema:
      $ref: '#/definitions/publish'
  publishArray:
    name: publishArray
    description: "配列単位の記事情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/publish"
  trnEventResearch:
    name: eventResearch
    description: "Event Researchデータ"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnEventResearch"
  trnEventArray:
    name: trnEventArray
    description: "配列単位のTRN_EVENTデータ"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnEvent"
  trnSpot:
    name: trnSpot
    description: "記事情報"
    required: true
    in: body
    schema:
      $ref: '#/definitions/trnSpot'
  trnSpotArray:
    name: trnSpotArray
    description: "配列単位の記事情報"
    required: true
    in: body
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnSpot"
  timeLine:
    name: timeLine
    description: "Userテーブルに格納されているtimelineのJsonの型"
    required: true
    in: body
    schema:
      $ref: '#/definitions/timeline'



responses:
  categoryMenuArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/categoryMenu"
  chart:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/chart"
  chartDate:
    description: "chart出力対象のJsonデータ"
    schema:
      type: "string"
  mstConfigJson:
    description: "successful operation"
    schema:
      $ref: "#/definitions/mstClientJson"
  mstConfigJsonArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/mstClientJson"
  publish:
    description: "successful operation"
    schema:
      $ref: "#/definitions/publish"
  publishArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/publish"
  trnEventResearchArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnEventResearch"
  trnEventArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnEvent"
  trnSpotArray:
    description: "successful operation"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/trnSpot"

definitions:
  categoryMenu:
    type: "object"
    properties:
      category_name:
        type: "string"
        description: "カテゴリーの名称"
      category_sum:
        type: "string"
        description: "任意のカテゴリーに属する記事数"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
  chart:
    type: "object"
    properties:
      chart_name:
        type: "string"
        description: "チャートの名称"
      chart_lib:
        type: "string"
        description: "使用するチャートのライブラリー"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      chart_date:
        type: "string"
        description: "チャートの出力対象日付"
      chart_value:
        type: "string"
        description: "チャート出力用データ"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
  mstClientJson:
    type: "object"
    properties:
      json_name:
        type: "string"
        description: "コンフィグ設定名"
        enum:
        - "Event Tree"
        - "Spot Tree"
        - "Food"
        - "Organization"
        - "Publisher"
        - "Retail"
        - "Twitter"
      json:
        type: "string"
        description: "設定値"
      remarks:
        type: "string"
        description: "備考"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
  publish:
    type: "object"
    properties:
      publishUuid:
        type: "string"
        description: "PublishのUUID"
      publishTitle:
        type: "string"
        description: "伝達する情報のタイトル"
      publishCategory:
        type: "string"
        description: "伝達する情報の種別"
      publishIconUrl:
        type: "string"
        description: "伝達記事情報のアイコン"
      publishSummary:
        type: "string"
        description: "伝達記事情報の要約"
      publishText:
        type: "string"
        description: "伝達する情報の中身"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      isLatestToward:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      latest_flg:
        type: "integer"
        format: "int32"
      last_flg:
        type: "integer"
        format: "int32"
      release_flg:
        type: "integer"
        format: "int32"
      delete_flg:
        type: "integer"
        format: "int32"
  sessionStorage:
    type: "object"
    properties:
      id:
        type: "string"
      dateTime:
        type: "string"
      temporary:
        type: "boolean"
      tokenID:
        type: "string"
      food:
        type: "object"
        properties:
          ramen:
            type: "number"
      org:
        type: "object"
        properties:
          degitalArt:
            type: "number"
  trnEventResearch:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_EVENT_RESEARCHのUUID"
      researchWord:
        type: "string"
        description: "Google検索文言"
      researchDomain:
        type: "string"
        format: "URL"
      domainIcon:
        type: "string"
        description: "ドメインのFabicon"
      siteAdminType:
        type: "string"
        description: "サイトの運営者種別"
        enum:
        - "Organization"
        - "Person"
        - "Twitter(Org)"
        - "Twitter(Person)"
      siteName:
        type: "string"
        description: "サイト(ドメイン)の名称"
      siteCategory:
        type: "string"
        description: "リサーチ用サイトのカテゴリ"
        enum:
        - "Amusement"
        - "Culture"
        - "Food"
        - "Publisher"
        - "Retail"
        - "Video & Movie"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      deleteFlg:
        type: "integer"
        format: "int32"
  trnEvent:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "TRN_EVENT_RESEARCHのUUID"
      research_uuid:
        type: "string"
        description: "TRN_EVENTのUUID"
      domainIcon:
        type: "string"
        description: "ドメインのFabicon"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      eventUrl:
        type: "string"
        format: "URL"
      eventPdf:
        type: "string"
        description: "Eventの詳細を記載したPDF"
      eventCategory:
        type: "string"
        description: "Eventのカテゴリー"
        enum:
        - "Digital Art"
        - "Ramen"
      eventTitle:
        type: "string"
        description: "Eventの名前"
      eventYear:
        type: "string"
        format: "yyyy"
      eventStartDate:
        type: "string"
        format: "yyyyMMdd"
      startDate:
        type: "string"
        format: date-time
      eventEndDate:
        type: "string"
        format: "yyyyMMdd"
      endDate:
        type: "string"
        format: date-time
      eventSpanType:
        type: integer
        format: int32
        enum:
          - 1
          - 2
          - 3
        x-enumNames:
          - OneDay
          - Period
          - AllTime 
      district:
        type: "string"
        description: "Eventの開催場所"
        enum:
        - "Shinjuku"
      longitude:
        type: "integer"
        format: "Double"
        description: "Event開催場所の経度"
      latitude:
        type: "integer"
        format: "Double"
        description: "Event開催場所の緯度"
      color:
        type: "string"
        description: "表示の色"
        enum:
        - "blue"
        - "black"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      deleteFlg:
        type: "integer"
        format: "int32"
  trnSpot:
    type: "object"
    properties:
      spot_name:
        type: "string"
        description: "観光目的を持つ場所の名前"
      spot_address:
        type: "string"
        description: "観光目的を持つ場所の住所"
      spot_ward:
        type: "string"
        description: "観光目的を持つ場所の所在地区"
        enum:
        - "Bunkyo"
        - "Chiyoda"
        - "Chuo"
        - "Minato"
        - "Nakano"
        - "Shibuya"
        - "Shinjuku"
        - "Toshima"
      spot_category:
        type: "string"
        description: "観光目的を持つ場所の種別"
        enum:
        - "Amusement"
        - "Coffee Shop"
        - "Food"
        - "Organization"
        - "Publisher"
        - "Retail"
        - "Spot"
        - "Twitter"
      spot_picture_header:
        type: "string"
        description: "カード情報に出力する為のヘッダーの写真"
      spot_picture_main:
        type: "string"
        description: "カード情報に出力する為のメインの写真"
      spot_description:
        type: "string"
        description: "カード情報に出力する為のメイン情報"
      spot_pdf:
        type: "string"
        description: "カード情報から詳細を情報を出力するPDFのパス"
      spot_latitude:
        type: "string"
        description: "観光目的を持つ場所の経度"
      spot_longitude:
        type: "string"
        description: "観光目的を持つ場所の緯度"
      zoom:
        type: "number"
        description: "Google Mapのzoom度"
      target:
        type: "boolean"
        description: "クライアントのみで使用しサーバー側では使用しない"
      addDate:
        type: "string"
        format: "yyyyMMdd"
      modDate:
        type: "string"
        format: "yyyyMMdd"
      delete_flg:
        type: "integer"
        format: "int32"
            
  timeline:
    type: "object"
    properties:
      id:
        type: "string"
      start:
        type: "string"
      end:
        type: "string"
      name:
        type: "string"
      move:
        type: "string"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"